/*
Generated with
foo.m:
d := StringToInteger(d);
F := QuadraticField(d);
ZF := Integers(F);
print Sprintf("dimensions[%o] := %o;\n", d, [[Dimension((HilbertCuspForms(F, n*ZF, [k, k]))) : k in [2..16 by 2]]: n in [1..5]]);
exit;

and
parallel --eta magma -b d:={1} foo.m ::: 5 8 12 13 17 21 24 28 29 33 37 40 41 44 53 56 57 60 61 65 69 73 76 77 85 88 89 92 93 97 101 104 105 109 113 120 124 129 133 136 137 140 141 145 149 152 156 157 161 165 168 172 173 177 181 184 185 188 193 197 201 204 205 209 213 217 220 221 229 232 233 236 237 241 248 249 253 257 264 265 268 269 273 277 280 281 284 285 293 296 301 305 309 312 313 316 317 321 328 329 332 337 341 344 345 348 349 353 357 364 365 373 376 377 380 381 385 389 393 397 401 408 409 412 413 417 421 424 428 429 433 437 440 444 445 449 453 456 457 460 461 465 469 472 473 476 481 485 488 489 492 493 497
*/

dimensions := AssociativeArray();

dimensions[17] := [
[ 0, 2, 5, 9, 14, 21, 29, 38 ],
[ 1, 14, 38, 74, 122, 182, 254, 338 ],
[ 2, 16, 43, 83, 136, 203, 283, 376 ],
[ 5, 54, 150, 294, 486, 726, 1014, 1350 ],
[ 5, 40, 110, 214, 352, 526, 734, 976 ]
];

dimensions[8] := [
[ 0, 1, 2, 3, 4, 6, 8, 10 ],
[ 0, 3, 7, 13, 21, 31, 43, 57 ],
[ 1, 5, 12, 22, 35, 52, 72, 95 ],
[ 0, 9, 25, 49, 81, 121, 169, 225 ],
[ 2, 11, 29, 55, 89, 133, 185, 245 ]
];

dimensions[5] := [
[ 0, 0, 1, 1, 2, 3, 3, 4 ],
[ 0, 1, 3, 5, 7, 11, 15, 19 ],
[ 0, 2, 5, 9, 14, 21, 29, 38 ],
[ 0, 3, 9, 17, 27, 41, 57, 75 ],
[ 0, 5, 13, 25, 41, 61, 85, 113 ]
];

dimensions[13] := [
[ 0, 1, 3, 5, 7, 11, 15, 19 ],
[ 1, 4, 12, 22, 34, 52, 72, 94 ],
[ 1, 12, 34, 66, 108, 162, 226, 300 ],
[ 2, 15, 43, 83, 135, 203, 283, 375 ],
[ 3, 20, 56, 108, 176, 264, 368, 488 ]
];

dimensions[41] := [
[ 1, 7, 18, 34, 55, 82, 114, 151 ],
[ 6, 55, 151, 295, 487, 727, 1015, 1351 ],
[ 8, 62, 169, 329, 542, 809, 1129, 1502 ],
[ 23, 216, 600, 1176, 1944, 2904, 4056, 5400 ],
[ 27, 220, 604, 1180, 1948, 2908, 4060, 5404 ]
];

dimensions[37] := [
[ 1, 4, 12, 22, 34, 52, 72, 94 ],
[ 4, 19, 55, 105, 169, 255, 355, 469 ],
[ 7, 60, 168, 328, 540, 808, 1128, 1500 ],
[ 10, 75, 211, 411, 675, 1011, 1411, 1875 ],
[ 13, 98, 274, 534, 878, 1314, 1834, 2438 ]
];

dimensions[12] := [
[ 0, 2, 4, 6, 8, 12, 16, 20 ],
[ 0, 6, 14, 26, 42, 62, 86, 114 ],
[ 1, 10, 27, 51, 82, 123, 171, 226 ],
[ 1, 19, 51, 99, 163, 243, 339, 451 ],
[ 4, 22, 58, 110, 178, 266, 370, 490 ]
];

dimensions[21] := [
[ 0, 3, 6, 10, 15, 22, 30, 39 ],
[ 2, 10, 24, 44, 70, 104, 144, 190 ],
[ 2, 18, 52, 100, 162, 244, 340, 450 ],
[ 5, 33, 87, 167, 273, 407, 567, 753 ],
[ 6, 56, 152, 296, 488, 728, 1016, 1352 ]
];

dimensions[40] := [
[ 2, 12, 32, 60, 96, 144, 200, 264 ],
[ 8, 66, 178, 346, 570, 850, 1186, 1578 ],
[ 18, 168, 468, 916, 1512, 2260, 3156, 4200 ],
[ 26, 252, 700, 1372, 2268, 3388, 4732, 6300 ],
[ 36, 318, 878, 1718, 2838, 4238, 5918, 7878 ]
];

dimensions[61] := [
[ 2, 9, 25, 47, 75, 113, 157, 207 ],
[ 7, 42, 118, 228, 372, 558, 778, 1032 ],
[ 15, 132, 368, 720, 1188, 1776, 2480, 3300 ],
[ 20, 165, 461, 901, 1485, 2221, 3101, 4125 ],
[ 35, 300, 828, 1620, 2676, 3996, 5580, 7428 ]
];

dimensions[53] := [
[ 2, 6, 17, 31, 48, 73, 101, 132 ],
[ 6, 27, 77, 147, 237, 357, 497, 657 ],
[ 8, 54, 149, 289, 474, 709, 989, 1314 ],
[ 14, 105, 295, 575, 945, 1415, 1975, 2625 ],
[ 19, 138, 384, 748, 1230, 1840, 2568, 3414 ]
];

dimensions[24] := [
[ 1, 5, 9, 15, 23, 33, 45, 59 ],
[ 3, 17, 41, 77, 125, 185, 257, 341 ],
[ 5, 30, 79, 151, 246, 367, 511, 678 ],
[ 6, 56, 152, 296, 488, 728, 1016, 1352 ],
[ 12, 86, 230, 446, 734, 1094, 1526, 2030 ]
];

dimensions[29] := [
[ 1, 3, 8, 14, 21, 32, 44, 57 ],
[ 3, 12, 34, 64, 102, 154, 214, 282 ],
[ 4, 24, 65, 125, 204, 305, 425, 564 ],
[ 6, 45, 127, 247, 405, 607, 847, 1125 ],
[ 11, 84, 228, 444, 732, 1092, 1524, 2028 ]
];

dimensions[73] := [
[ 2, 17, 47, 91, 149, 223, 311, 413 ],
[ 16, 149, 413, 809, 1337, 1997, 2789, 3713 ],
[ 29, 264, 734, 1438, 2376, 3550, 4958, 6600 ],
[ 65, 594, 1650, 3234, 5346, 7986, 11154, 14850 ],
[ 49, 430, 1194, 2338, 3862, 5770, 8058, 10726 ]
];

dimensions[44] := [
[ 2, 8, 18, 32, 50, 74, 102, 134 ],
[ 6, 36, 92, 176, 288, 428, 596, 792 ],
[ 10, 58, 152, 292, 478, 712, 992, 1318 ],
[ 15, 129, 353, 689, 1137, 1697, 2369, 3153 ],
[ 28, 198, 534, 1038, 1710, 2550, 3558, 4734 ]
];

dimensions[28] := [
[ 1, 5, 11, 19, 29, 43, 59, 77 ],
[ 3, 21, 53, 101, 165, 245, 341, 453 ],
[ 8, 52, 138, 266, 436, 650, 906, 1204 ],
[ 11, 77, 205, 397, 653, 973, 1357, 1805 ],
[ 12, 82, 222, 430, 706, 1054, 1470, 1954 ]
];

dimensions[89] := [
[ 3, 21, 56, 108, 177, 264, 368, 489 ],
[ 20, 177, 489, 957, 1581, 2361, 3297, 4389 ],
[ 24, 198, 545, 1065, 1758, 2625, 3665, 4878 ],
[ 77, 702, 1950, 3822, 6318, 9438, 13182, 17550 ],
[ 83, 708, 1956, 3828, 6324, 9444, 13188, 17556 ]
];

dimensions[57] := [
[ 2, 13, 32, 60, 97, 144, 200, 265 ],
[ 12, 98, 266, 518, 854, 1274, 1778, 2366 ],
[ 14, 126, 352, 688, 1134, 1696, 2368, 3150 ],
[ 43, 381, 1053, 2061, 3405, 5085, 7101, 9453 ],
[ 34, 278, 764, 1492, 2462, 3676, 5132, 6830 ]
];

dimensions[33] := [
[ 1, 7, 15, 27, 43, 63, 87, 115 ],
[ 6, 44, 116, 224, 368, 548, 764, 1016 ],
[ 9, 58, 155, 299, 490, 731, 1019, 1354 ],
[ 19, 165, 453, 885, 1461, 2181, 3045, 4053 ],
[ 16, 122, 330, 642, 1058, 1578, 2202, 2930 ]
];

dimensions[60] := [
[ 4, 22, 56, 104, 166, 248, 344, 454 ],
[ 14, 114, 306, 594, 978, 1458, 2034, 2706 ],
[ 28, 216, 608, 1184, 1944, 2912, 4064, 5400 ],
[ 56, 444, 1212, 2364, 3900, 5820, 8124, 10812 ],
[ 64, 548, 1508, 2948, 4868, 7268, 10148, 13508 ]
];

dimensions[101] := [
[ 4, 16, 43, 81, 130, 195, 271, 358 ],
[ 12, 73, 203, 393, 643, 963, 1343, 1783 ],
[ 20, 146, 401, 781, 1286, 1921, 2681, 3566 ],
[ 34, 285, 795, 1555, 2565, 3835, 5355, 7125 ],
[ 63, 520, 1432, 2800, 4624, 6904, 9640, 12832 ]
];

dimensions[85] := [
[ 6, 28, 80, 152, 244, 368, 512, 676 ],
[ 22, 136, 384, 744, 1216, 1824, 2544, 3376 ],
[ 50, 432, 1204, 2356, 3888, 5812, 8116, 10800 ],
[ 66, 540, 1508, 2948, 4860, 7268, 10148, 13500 ],
[ 90, 812, 2252, 4412, 7292, 10892, 15212, 20252 ]
];

dimensions[76] := [
[ 4, 18, 44, 82, 132, 196, 272, 360 ],
[ 12, 90, 242, 470, 774, 1154, 1610, 2142 ],
[ 30, 234, 640, 1248, 2058, 3072, 4288, 5706 ],
[ 39, 345, 953, 1865, 3081, 4601, 6425, 8553 ],
[ 64, 522, 1434, 2802, 4626, 6906, 9642, 12834 ]
];

dimensions[77] := [
[ 3, 11, 29, 53, 83, 125, 173, 227 ],
[ 10, 48, 132, 252, 408, 612, 852, 1128 ],
[ 14, 94, 256, 496, 814, 1216, 1696, 2254 ],
[ 27, 185, 509, 989, 1625, 2429, 3389, 4505 ],
[ 32, 238, 658, 1282, 2110, 3154, 4402, 5854 ]
];

dimensions[93] := [
[ 4, 17, 42, 78, 125, 186, 258, 341 ],
[ 14, 74, 196, 376, 614, 916, 1276, 1694 ],
[ 22, 162, 456, 888, 1458, 2184, 3048, 4050 ],
[ 39, 279, 761, 1481, 2439, 3641, 5081, 6759 ],
[ 46, 358, 984, 1920, 3166, 4728, 6600, 8782 ]
];

dimensions[56] := [
[ 3, 11, 25, 45, 71, 105, 145, 191 ],
[ 9, 51, 131, 251, 411, 611, 851, 1131 ],
[ 14, 82, 216, 416, 682, 1016, 1416, 1882 ],
[ 24, 186, 506, 986, 1626, 2426, 3386, 4506 ],
[ 38, 280, 760, 1480, 2440, 3640, 5080, 6760 ]
];

dimensions[88] := [
[ 5, 21, 53, 99, 159, 237, 329, 435 ],
[ 17, 111, 295, 571, 939, 1399, 1951, 2595 ],
[ 40, 286, 778, 1514, 2494, 3722, 5194, 6910 ],
[ 50, 420, 1156, 2260, 3732, 5572, 7780, 10356 ],
[ 58, 456, 1256, 2452, 4044, 6040, 8432, 11220 ]
];

dimensions[133] := [
[ 5, 27, 75, 143, 231, 347, 483, 639 ],
[ 20, 130, 362, 702, 1150, 1722, 2402, 3190 ],
[ 46, 408, 1136, 2224, 3672, 5488, 7664, 10200 ],
[ 65, 515, 1427, 2787, 4595, 6867, 9587, 12755 ],
[ 80, 666, 1850, 3618, 5970, 8922, 12458, 16578 ]
];

dimensions[69] := [
[ 3, 13, 29, 53, 85, 125, 173, 229 ],
[ 10, 52, 132, 252, 412, 612, 852, 1132 ],
[ 19, 114, 309, 597, 978, 1461, 2037, 2706 ],
[ 27, 189, 509, 989, 1629, 2429, 3389, 4509 ],
[ 38, 328, 904, 1768, 2920, 4360, 6088, 8104 ]
];

dimensions[92] := [
[ 5, 19, 47, 87, 139, 207, 287, 379 ],
[ 17, 99, 259, 499, 819, 1219, 1699, 2259 ],
[ 24, 158, 426, 826, 1358, 2026, 2826, 3758 ],
[ 53, 375, 1015, 1975, 3255, 4855, 6775, 9015 ],
[ 52, 398, 1094, 2134, 3518, 5254, 7334, 9758 ]
];

dimensions[173] := [
[ 7, 31, 86, 164, 265, 398, 554, 733 ],
[ 23, 148, 414, 804, 1318, 1974, 2754, 3658 ],
[ 38, 296, 819, 1599, 2636, 3939, 5499, 7316 ],
[ 70, 585, 1631, 3191, 5265, 7871, 10991, 14625 ],
[ 93, 764, 2122, 4150, 6848, 10234, 14290, 19016 ]
];

dimensions[152] := [
[ 9, 37, 93, 175, 283, 421, 585, 775 ],
[ 29, 195, 523, 1015, 1671, 2491, 3475, 4623 ],
[ 46, 320, 868, 1688, 2780, 4148, 5788, 7700 ],
[ 86, 744, 2056, 4024, 6648, 9928, 13864, 18456 ],
[ 102, 812, 2236, 4368, 7208, 10764, 15028, 20000 ]
];

dimensions[109] := [                                                                                                                                                                                                        [ 4, 21, 59, 113, 183, 275, 383, 507 ],
[ 15, 102, 286, 556, 912, 1366, 1906, 2532 ],
[ 37, 324, 902, 1766, 2916, 4358, 6086, 8100 ],
[ 48, 405, 1129, 2209, 3645, 5449, 7609, 10125 ],
[ 83, 732, 2028, 3972, 6564, 9804, 13692, 18228 ]
];

dimensions[124] := [
[ 7, 35, 89, 169, 275, 409, 569, 755 ],
[ 27, 189, 509, 989, 1629, 2429, 3389, 4509 ],
[ 60, 488, 1342, 2622, 4328, 6462, 9022, 12008 ],
[ 93, 735, 2015, 3935, 6495, 9695, 13535, 18015 ],
[ 130, 1092, 3012, 5892, 9732, 14532, 20292, 27012 ]
];



weights := [2..16 by 2];
levels := [1..5];
Z<T> := PowerSeriesRing(Integers());

printf "Testing the computation of the HilberSeriesCusp...D=";

function check(d)
    printf "%o ", d;
    F := QuadraticField(d);
    ZF := Integers(F);
    prec := 1;
    R := GradedRingOfHMFs(F, prec);

    function dim_row(level)
      PS<T> := PowerSeriesRing(Integers() : Precision:=30);
      HC := HilbertSeriesCusp(R, level*ZF);
      return [AbsEltseq(PS!HC)[k+1] : k in weights];
    end function;
    assert dimensions[d] eq [dim_row(n) : n in levels];
    return true;
end function;

ds := [];
t := Time();
for counter in [1..20] do
    if Set(ds) eq Keys(dimensions) then
        break;
    end if;
    d := Random(Keys(dimensions));
    while d in ds do
        d := Random(Keys(dimensions));
    end while;
    Append(~ds, d);
    _ := check(d);
end for;
